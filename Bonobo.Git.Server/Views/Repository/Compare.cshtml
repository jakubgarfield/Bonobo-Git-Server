@model RepositoryCompareModel
@using Bonobo.Git.Server.Extensions
@{
    ViewBag.Title = Resources.Repository_Compare_Title;
    Layout = "~/Views/Repository/_RepositoryLayout.cshtml";
}
@helper HeaderForDiff(RepositoryCommitChangeModel item, bool withDiff)
{
    <div class="item">
        <p>
            @if (withDiff)
            {
                <a href="@("#link-" + item.ChangeId)"><i class="fa fa-share-square-o" title="Go To Link"></i></a>
            }
            else
            {
                <a href="@("#change-" + item.ChangeId)"><i class="fa fa-share-square-o" title="Go To Change"></i></a>
            }

            @if (item.Status == LibGit2Sharp.ChangeKind.Added)
            {
                <text><i class="fa fa-plus-square-o" title="@Resources.Repository_Commit_Added"></i></text>
            }
            else if (item.Status == LibGit2Sharp.ChangeKind.Modified)
            {
                <text><i class="fa fa-edit" title="@Resources.Repository_Commit_Modified"></i></text>
            }
            else if (item.Status == LibGit2Sharp.ChangeKind.Deleted)
            {
                <text><i class="fa fa-minus-square-o" title="@Resources.Repository_Commit_Deleted"></i></text>
            }
            else if (item.Status == LibGit2Sharp.ChangeKind.Renamed)
            {
                <text><i class="fa fa-share-square-o" title="@Resources.Repository_Commit_Renamed"></i></text>
            }
            else if (item.Status == LibGit2Sharp.ChangeKind.Copied)
            {
                <text><i class="fa fa-copy" title="@Resources.Repository_Commit_Copied"></i></text>
            }
            else if (item.Status == LibGit2Sharp.ChangeKind.TypeChanged)
            {
                <text><i class="fa fa-caret-square-o-right" title="@Resources.Repository_Commit_TypeChanged"></i></text>
            }
            @if (item.Status != LibGit2Sharp.ChangeKind.Deleted)
            {
                @Html.ActionLink(item.Path, "Blob", new { id = ViewBag.ID, encodedPath = PathEncoder.Encode(item.Path, allowSlash: true), encodedName = PathEncoder.Encode(Model.Commit2Model.ID) }, new { id = (withDiff ? "change-" : "link-") + item.ChangeId })
            }
            else
            {
                @item.Path
            }
            <span class="count">@item.LinesChanged<em>(+@item.LinesAdded -@item.LinesDeleted)</em> </span>
        </p>
    </div>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "pure-form pure-form-aligned" }))
{
    <fieldset>
        <legend>@Resources.Repository_Compare_DefferenceBetween</legend>
        <div class="pure-control-group">
            @Html.LabelFor(m => m.Commit1)
            @Html.TextBoxFor(m => m.Commit1, new { @class = "medium", autofocus = "" })<em>*</em>
            @Html.ValidationMessageFor(m => m.Commit1)
        </div>
        <div class="pure-control-group">
            @Html.LabelFor(m => m.Commit2)
            @Html.TextBoxFor(m => m.Commit2, new { @class = "medium", autofocus = "" })<em>*</em>
            @Html.ValidationMessageFor(m => m.Commit2)
        </div>
        <div class="pure-control-group">
            @Html.LabelFor(m => m.FilePath)
            @Html.TextBoxFor(m => m.FilePath, new { @class = "medium", autofocus = "" })
            @Html.ValidationMessageFor(m => m.FilePath)
        
            <input type="submit" value="@Resources.Repository_Compare_Submit" class="pure-button pure-button-primary" />
        </div>
    </fieldset>
}

@if (Model != null && Model.Changes != null)
{
    <div>
        @*@Html.Partial("_Commit", Model)*@
        <div id="changes" class="changes">
            <h3>@Model.GetType().GetDisplayValue("Changes") : @Model.Commit1Model.ID...@Model.Commit2Model.ID</h3>
            @if (Model.Changes.Count() > 0)
            {
                foreach (var item in Model.Changes)
                {
                    @HeaderForDiff(item, false)
                }
            }
            else
            {
                <div class="item">No Changes.</div>
            }
        </div>

        @if (Model.Changes.Count() > 0)
        {
            <div class="diff">
                <h3>@Resources.Repository_Commit_Details</h3>
                @foreach (var item in Model.Changes.Where(i => i.Status == LibGit2Sharp.ChangeKind.Modified || i.Status == LibGit2Sharp.ChangeKind.Added))
                {
                    <a id="@item.ChangeId"></a>
                    <div class="blob" id="@("change-" + item.ChangeId)">
                        <div class="controls">
                            @HeaderForDiff(item, true)
                        </div>
                        <pre><code class="language diff">@item.Patch</code></pre>
                    </div>
                }
            </div>
        }
    </div>
}

@section scripts
{
    <script>hljs.configure({ tabReplace: '    ' }); hljs.initHighlightingOnLoad();</script>
}
