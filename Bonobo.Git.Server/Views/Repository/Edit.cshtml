@using Bonobo.Git.Server.Extensions
@model Bonobo.Git.Server.Models.RepositoryDetailModel

@{
    ViewBag.Title = Resources.Repository_Edit_Title;
}

@if (Model == null)
{
    @Html.Partial("~/Views/Shared/_ItemNotFound.cshtml")
}
else
{
    <text>
        <h1>
            @Html.Raw(Model.Logo.Exists ? string.Format("<img src='data:image/png;base64,{0}' class='repo-logo' />", Model.Logo.Base64Image) : "")
            @Model.Name
        </h1>

    @if (ViewBag.UpdateSuccess != null && ViewBag.UpdateSuccess)
    {
        <div class="summary-success">
            <p>@Resources.Repository_Edit_UpdateSuccess</p>
        </div>
    }

    @using (Html.BeginForm("Edit", "Repository", FormMethod.Post, new { @class = "pure-form pure-form-aligned", enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(false, Resources.Repository_Edit_Fail)
        @Html.HiddenFor(m => m.Name);

        <fieldset>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Group)
                @Html.TextBoxFor(m => m.Group, new { @class = "medium" })
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Description)
                    @Html.TextAreaFor(m => m.Description, new { @class = "medium" })
            </div>

            <div class="pure-control-group">
                @Html.LabelFor(m => m.Logo.PostedFile)
                <input type="file" name="Logo.PostedFile" id="Logo_PostedFile" />
                <sup>.png, .jpg, .jpeg, .gif</sup>
            </div>

            <div class="pure-control-group">
                    @Html.LabelFor(m => m.Logo.RemoveLogo)
                    @Html.CheckBoxFor(m => m.Logo.RemoveLogo)
                </div>

                <div class="pure-control-group">
                @Html.LabelFor(m => m.AllowAnonymous)
                @Html.CheckBoxFor(m => m.AllowAnonymous)
                <i class="fa fa-info-circle" title="@Resources.Repository_AllowAnonymousHint"></i>
            </div>

            @if (AppSettings.IsPushAuditEnabled)
            {
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.AuditPushUser)
                    @Html.CheckBoxFor(m => m.AuditPushUser)
                    <i class="fa fa-info-circle" title="@Resources.Repository_AuditPushUserHint"></i>
                </div>
            }
            <div class="pure-control-group checkboxlist">
                @Html.LabelFor(m => m.Users)
                @{
                    IList<SelectListItem> users = null;
                    IList<string> titles = null;
                    IList<string>[] ud = (IList<string>[])ViewData["AvailableUsers"];
                    if (ud.Count() > 0 && ud[0].Count > 1)
                    {
                        users = (from u in ud 
                                 orderby u[1] + u[2]
                                 select new SelectListItem() { Value = u[0], Text = (u[1] + " " + u[2]) }).ToArray();
                        titles = (from u in ud 
                                  orderby u[1] + u[2]
                                  select u[0].Replace("!", "\\")).ToArray();

                    }
                    else
                    {
                        users = (from u in ud
                                 orderby u[0]
                                 select new SelectListItem() { Value = u[0], Text = u[0].Replace("!", "\\") }).ToArray();
                    }
                }

                    @Html.CheckboxListFor(m => m.Users, users, new { @class = "checkboxList medium" }, titles)
                <i class="fa fa-info-circle" title="@Resources.Repository_UsersHint"></i>
            </div>



            <div class="pure-control-group checkboxlist">
                @Html.LabelFor(m => m.Administrators)
                @{
                    IList<SelectListItem> administrators = null;
                    titles = null;
                    IList<string>[] ad = (IList<string>[])ViewData["AvailableAdministrators"];
                    if (ad.Count() > 0 && ad[0].Count() > 1)
                    {
                        administrators = (from u in ad
                                              orderby u[1] + u[2]
                                              select new SelectListItem(){Value = u[0], Text = (u[1] + " " + u[2])}).ToArray();
                        titles = (from u in ad
                                              orderby u[1] + u[2]
                                              select u[0].Replace("!", "\\")).ToArray();
                    }
                    else
                    {

                        administrators = (from u in ad
                                          orderby u[0]
                                          select new SelectListItem() { Value = u[0], Text = u[0].Replace("!", "\\") }).ToArray();
                    }
        
                }

                    @Html.CheckboxListFor(m => m.Administrators, administrators, new { @class = "checkboxList medium" }, titles)
                <i class="fa fa-info-circle" title="@Resources.Repository_AdministratorsHint"></i>
                @Html.ValidationMessageFor(m => m.Administrators)
            </div>

            <div class="pure-control-group checkboxlist">
                @Html.LabelFor(m => m.Teams)
                @{
                    var teams = (from u in ViewData["AvailableTeams"] as string[]
                        orderby u
                                     select new SelectListItem() { Value = u, Text = u }).ToArray();
                }

                    @Html.CheckboxListFor(m => m.Teams, teams, new { @class = "checkboxList medium" })
                <i class="fa fa-info-circle" title="@Resources.Repository_TeamsHint"></i>
            </div>

            <div class="pure-controls">
                <a class="pure-button" href="@Url.Action("Detail", new {id = Model.Name})"><i class="fa fa-long-arrow-left"></i> @Resources.Repository_Edit_Back</a>
                <button type="submit" class="pure-button pure-button-primary"><i class="fa fa-save"></i> @Resources.Repository_Edit_Submit</button>
            </div>
        </fieldset>
    }
    </text>
}
